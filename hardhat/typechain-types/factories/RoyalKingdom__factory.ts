/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RoyalKingdom, RoyalKingdomInterface } from "../RoyalKingdom";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseTokenURI_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "maxSupply_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxMintAtOnce_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxMintWhitelist_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintAtOnce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintWhitelist",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "mintPresale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presalePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "reserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setWhitelistMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "togglePresale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405266b1a2bc2ec50000600b55666a94d74f430000600c556000600f553480156200002c57600080fd5b50604051620022b6380380620022b68339810160408190526200004f9162000282565b855186908690620000689060029060208501906200010f565b5080516200007e9060039060208401906200010f565b50506001600055506200009133620000bd565b8351620000a690600e9060208701906200010f565b50608092909252600955600a55506200036c915050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011d906200032f565b90600052602060002090601f0160209004810192826200014157600085556200018c565b82601f106200015c57805160ff19168380011785556200018c565b828001600101855582156200018c579182015b828111156200018c5782518255916020019190600101906200016f565b506200019a9291506200019e565b5090565b5b808211156200019a57600081556001016200019f565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001dd57600080fd5b81516001600160401b0380821115620001fa57620001fa620001b5565b604051601f8301601f19908116603f01168101908282118183101715620002255762000225620001b5565b816040528381526020925086838588010111156200024257600080fd5b600091505b8382101562000266578582018301518183018401529082019062000247565b83821115620002785760008385830101525b9695505050505050565b60008060008060008060c087890312156200029c57600080fd5b86516001600160401b0380821115620002b457600080fd5b620002c28a838b01620001cb565b97506020890151915080821115620002d957600080fd5b620002e78a838b01620001cb565b96506040890151915080821115620002fe57600080fd5b506200030d89828a01620001cb565b945050606087015192506080870151915060a087015190509295509295509295565b600181811c908216806200034457607f821691505b602082108114156200036657634e487b7160e01b600052602260045260246000fd5b50919050565b608051611f20620003966000396000818161059601528181610b900152610c730152611f206000f3fe6080604052600436106101f85760003560e01c8063819b25ba1161010d578063b88d4fde116100a0578063d547cfb71161006f578063d547cfb71461056f578063d5abeb0114610584578063e985e9c5146105b8578063f2fde38b14610601578063fd6552851461062157600080fd5b8063b88d4fde146104e2578063bd32fb6614610502578063c87b56dd14610522578063c884ef831461054257600080fd5b8063a0712d68116100dc578063a0712d6814610483578063a22cb46514610496578063a759a7c8146104b6578063aa98e0c6146104cc57600080fd5b8063819b25ba1461041a5780638da5cb5b1461043a57806395d89b4114610458578063a035b1fe1461046d57600080fd5b806334393743116101905780636352211e1161015f5780636352211e1461039157806368428a1b146103b157806370a08231146103d0578063715018a6146103f05780637d8966e41461040557600080fd5b8063343937431461032257806342842e0e1461033757806353135ca01461035757806355f804b31461037157600080fd5b8063095ea7b3116101cc578063095ea7b3146102b05780630c0a6b5e146102d257806318160ddd146102e557806323b872dd1461030257600080fd5b80620e7fa8146101fd57806301ffc9a71461022657806306fdde0314610256578063081812fc14610278575b600080fd5b34801561020957600080fd5b50610213600c5481565b6040519081526020015b60405180910390f35b34801561023257600080fd5b5061024661024136600461198e565b610637565b604051901515815260200161021d565b34801561026257600080fd5b5061026b610689565b60405161021d9190611a03565b34801561028457600080fd5b50610298610293366004611a16565b61071b565b6040516001600160a01b03909116815260200161021d565b3480156102bc57600080fd5b506102d06102cb366004611a4b565b61075f565b005b6102d06102e0366004611a75565b6107ed565b3480156102f157600080fd5b506001546000540360001901610213565b34801561030e57600080fd5b506102d061031d366004611af4565b6109e6565b34801561032e57600080fd5b506102d06109f1565b34801561034357600080fd5b506102d0610352366004611af4565b610a2f565b34801561036357600080fd5b50600d546102469060ff1681565b34801561037d57600080fd5b506102d061038c366004611b30565b610a4a565b34801561039d57600080fd5b506102986103ac366004611a16565b610a80565b3480156103bd57600080fd5b50600d5461024690610100900460ff1681565b3480156103dc57600080fd5b506102136103eb366004611ba2565b610a92565b3480156103fc57600080fd5b506102d0610ae1565b34801561041157600080fd5b506102d0610b17565b34801561042657600080fd5b506102d0610435366004611a16565b610b5e565b34801561044657600080fd5b506008546001600160a01b0316610298565b34801561046457600080fd5b5061026b610c15565b34801561047957600080fd5b50610213600b5481565b6102d0610491366004611a16565b610c24565b3480156104a257600080fd5b506102d06104b1366004611bbd565b610d87565b3480156104c257600080fd5b50610213600a5481565b3480156104d857600080fd5b50610213600f5481565b3480156104ee57600080fd5b506102d06104fd366004611c0f565b610e1d565b34801561050e57600080fd5b506102d061051d366004611a16565b610e68565b34801561052e57600080fd5b5061026b61053d366004611a16565b610e97565b34801561054e57600080fd5b5061021361055d366004611ba2565b60106020526000908152604090205481565b34801561057b57600080fd5b5061026b610f1c565b34801561059057600080fd5b506102137f000000000000000000000000000000000000000000000000000000000000000081565b3480156105c457600080fd5b506102466105d3366004611ceb565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b34801561060d57600080fd5b506102d061061c366004611ba2565b610faa565b34801561062d57600080fd5b5061021360095481565b60006001600160e01b031982166380ac58cd60e01b148061066857506001600160e01b03198216635b5e139f60e01b145b8061068357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461069890611d1e565b80601f01602080910402602001604051908101604052809291908181526020018280546106c490611d1e565b80156107115780601f106106e657610100808354040283529160200191610711565b820191906000526020600020905b8154815290600101906020018083116106f457829003601f168201915b5050505050905090565b600061072682611042565b610743576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061076a82610a80565b9050806001600160a01b0316836001600160a01b0316141561079f5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216148015906107bf57506107bd81336105d3565b155b156107dd576040516367d9dca160e11b815260040160405180910390fd5b6107e883838361107b565b505050565b600d5460ff166108375760405162461bcd60e51b815260206004820152601060248201526f50726573616c6520696e61637469766560801b60448201526064015b60405180910390fd5b6040516bffffffffffffffffffffffff193360601b1660208201526000906034016040516020818303038152906040528051906020012090506108b183838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600f5491508490506110d7565b6108ef5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081dda1a5d195b1a5cdd1959608a1b604482015260640161082e565b600a543360009081526010602052604090205461090d908690611d6f565b111561095b5760405162461bcd60e51b815260206004820152601760248201527f57686974656c697374206d696e74206578636565646564000000000000000000604482015260640161082e565b3484600c5461096a9190611d87565b146109b15760405162461bcd60e51b815260206004820152601760248201527615985b1d59481cd95b9d081a5cc81a5b98dbdc9c9958dd604a1b604482015260640161082e565b33600090815260106020526040812080548692906109d0908490611d6f565b909155506109e0905033856110ed565b50505050565b6107e883838361110b565b6008546001600160a01b03163314610a1b5760405162461bcd60e51b815260040161082e90611da6565b600d805460ff19811660ff90911615179055565b6107e883838360405180602001604052806000815250610e1d565b6008546001600160a01b03163314610a745760405162461bcd60e51b815260040161082e90611da6565b6107e8600e83836118df565b6000610a8b82611321565b5192915050565b60006001600160a01b038216610abb576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6008546001600160a01b03163314610b0b5760405162461bcd60e51b815260040161082e90611da6565b610b15600061144a565b565b6008546001600160a01b03163314610b415760405162461bcd60e51b815260040161082e90611da6565b600d805461ff001981166101009182900460ff1615909102179055565b6008546001600160a01b03163314610b885760405162461bcd60e51b815260040161082e90611da6565b6001546000547f00000000000000000000000000000000000000000000000000000000000000009183910360001901610bc19190611d6f565b1115610c085760405162461bcd60e51b81526020600482015260166024820152754d696e7420657863656564206d617820737570706c7960501b604482015260640161082e565b610c1233826110ed565b50565b60606003805461069890611d1e565b600d54610100900460ff16610c6b5760405162461bcd60e51b815260206004820152600d60248201526c53616c6520696e61637469766560981b604482015260640161082e565b6001546000547f00000000000000000000000000000000000000000000000000000000000000009183910360001901610ca49190611d6f565b1115610ceb5760405162461bcd60e51b81526020600482015260166024820152754d696e7420657863656564206d617820737570706c7960501b604482015260640161082e565b600954811115610d315760405162461bcd60e51b815260206004820152601160248201527013585e081b5a5b9d08195e18d959591959607a1b604482015260640161082e565b3481600b54610d409190611d87565b14610c085760405162461bcd60e51b815260206004820152601760248201527615985b1d59481cd95b9d081a5cc81a5b98dbdc9c9958dd604a1b604482015260640161082e565b6001600160a01b038216331415610db15760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610e2884848461110b565b6001600160a01b0383163b15158015610e4a5750610e488484848461149c565b155b156109e0576040516368d2bf6b60e11b815260040160405180910390fd5b6008546001600160a01b03163314610e925760405162461bcd60e51b815260040161082e90611da6565b600f55565b6060610ea282611042565b610ebf57604051630a14c4b560e41b815260040160405180910390fd5b6000610ec9611585565b9050805160001415610eea5760405180602001604052806000815250610f15565b80610ef484611594565b604051602001610f05929190611ddb565b6040516020818303038152906040525b9392505050565b600e8054610f2990611d1e565b80601f0160208091040260200160405190810160405280929190818152602001828054610f5590611d1e565b8015610fa25780601f10610f7757610100808354040283529160200191610fa2565b820191906000526020600020905b815481529060010190602001808311610f8557829003601f168201915b505050505081565b6008546001600160a01b03163314610fd45760405162461bcd60e51b815260040161082e90611da6565b6001600160a01b0381166110395760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161082e565b610c128161144a565b600081600111158015611056575060005482105b8015610683575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000826110e48584611692565b14949350505050565b611107828260405180602001604052806000815250611706565b5050565b600061111682611321565b80519091506000906001600160a01b0316336001600160a01b031614806111445750815161114490336105d3565b8061115f5750336111548461071b565b6001600160a01b0316145b90508061117f57604051632ce44b5f60e11b815260040160405180910390fd5b846001600160a01b031682600001516001600160a01b0316146111b45760405162a1148160e81b815260040160405180910390fd5b6001600160a01b0384166111db57604051633a954ecd60e21b815260040160405180910390fd5b6111eb600084846000015161107b565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b4290921691909102179092559086018083529120549091166112d7576000548110156112d7578251600082815260046020908152604090912080549186015167ffffffffffffffff16600160a01b026001600160e01b03199092166001600160a01b03909316929092171790555b5082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b60408051606081018252600080825260208201819052918101919091528180600111158015611351575060005481105b1561143157600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff1615159181018290529061142f5780516001600160a01b0316156113c5579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff161515928101929092521561142a579392505050565b6113c5565b505b604051636f96cda160e11b815260040160405180910390fd5b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906114d1903390899088908890600401611e0a565b6020604051808303816000875af192505050801561150c575060408051601f3d908101601f1916820190925261150991810190611e47565b60015b611567573d80801561153a576040519150601f19603f3d011682016040523d82523d6000602084013e61153f565b606091505b50805161155f576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600e805461069890611d1e565b6060816115b85750506040805180820190915260018152600360fc1b602082015290565b8160005b81156115e257806115cc81611e64565b91506115db9050600a83611e95565b91506115bc565b60008167ffffffffffffffff8111156115fd576115fd611bf9565b6040519080825280601f01601f191660200182016040528015611627576020820181803683370190505b5090505b841561157d5761163c600183611ea9565b9150611649600a86611ec0565b611654906030611d6f565b60f81b81838151811061166957611669611ed4565b60200101906001600160f81b031916908160001a90535061168b600a86611e95565b945061162b565b600081815b84518110156116fe5760008582815181106116b4576116b4611ed4565b602002602001015190508083116116da57600083815260208290526040902092506116eb565b600081815260208490526040902092505b50806116f681611e64565b915050611697565b509392505050565b6107e883838360016000546001600160a01b03851661173757604051622e076360e81b815260040160405180910390fd5b836117555760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038516600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168c0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168c01811690920217909155858452600490925290912080546001600160e01b031916909217600160a01b42909216919091021790558080850183801561180757506001600160a01b0387163b15155b15611890575b60405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4611858600088848060010195508861149c565b611875576040516368d2bf6b60e11b815260040160405180910390fd5b8082141561180d57826000541461188b57600080fd5b6118d6565b5b6040516001830192906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480821415611891575b5060005561131a565b8280546118eb90611d1e565b90600052602060002090601f01602090048101928261190d5760008555611953565b82601f106119265782800160ff19823516178555611953565b82800160010185558215611953579182015b82811115611953578235825591602001919060010190611938565b5061195f929150611963565b5090565b5b8082111561195f5760008155600101611964565b6001600160e01b031981168114610c1257600080fd5b6000602082840312156119a057600080fd5b8135610f1581611978565b60005b838110156119c65781810151838201526020016119ae565b838111156109e05750506000910152565b600081518084526119ef8160208601602086016119ab565b601f01601f19169290920160200192915050565b602081526000610f1560208301846119d7565b600060208284031215611a2857600080fd5b5035919050565b80356001600160a01b0381168114611a4657600080fd5b919050565b60008060408385031215611a5e57600080fd5b611a6783611a2f565b946020939093013593505050565b600080600060408486031215611a8a57600080fd5b83359250602084013567ffffffffffffffff80821115611aa957600080fd5b818601915086601f830112611abd57600080fd5b813581811115611acc57600080fd5b8760208260051b8501011115611ae157600080fd5b6020830194508093505050509250925092565b600080600060608486031215611b0957600080fd5b611b1284611a2f565b9250611b2060208501611a2f565b9150604084013590509250925092565b60008060208385031215611b4357600080fd5b823567ffffffffffffffff80821115611b5b57600080fd5b818501915085601f830112611b6f57600080fd5b813581811115611b7e57600080fd5b866020828501011115611b9057600080fd5b60209290920196919550909350505050565b600060208284031215611bb457600080fd5b610f1582611a2f565b60008060408385031215611bd057600080fd5b611bd983611a2f565b915060208301358015158114611bee57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611c2557600080fd5b611c2e85611a2f565b9350611c3c60208601611a2f565b925060408501359150606085013567ffffffffffffffff80821115611c6057600080fd5b818701915087601f830112611c7457600080fd5b813581811115611c8657611c86611bf9565b604051601f8201601f19908116603f01168101908382118183101715611cae57611cae611bf9565b816040528281528a6020848701011115611cc757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611cfe57600080fd5b611d0783611a2f565b9150611d1560208401611a2f565b90509250929050565b600181811c90821680611d3257607f821691505b60208210811415611d5357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611d8257611d82611d59565b500190565b6000816000190483118215151615611da157611da1611d59565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008351611ded8184602088016119ab565b835190830190611e018183602088016119ab565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e3d908301846119d7565b9695505050505050565b600060208284031215611e5957600080fd5b8151610f1581611978565b6000600019821415611e7857611e78611d59565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611ea457611ea4611e7f565b500490565b600082821015611ebb57611ebb611d59565b500390565b600082611ecf57611ecf611e7f565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220422f030068d11bf65291f86ed5b9f90b27a7a81e7eae4b8b0660932c3638ff0364736f6c634300080c0033";

type RoyalKingdomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyalKingdomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyalKingdom__factory extends ContractFactory {
  constructor(...args: RoyalKingdomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RoyalKingdom";
  }

  deploy(
    name_: string,
    symbol_: string,
    baseTokenURI_: string,
    maxSupply_: BigNumberish,
    maxMintAtOnce_: BigNumberish,
    maxMintWhitelist_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RoyalKingdom> {
    return super.deploy(
      name_,
      symbol_,
      baseTokenURI_,
      maxSupply_,
      maxMintAtOnce_,
      maxMintWhitelist_,
      overrides || {}
    ) as Promise<RoyalKingdom>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    baseTokenURI_: string,
    maxSupply_: BigNumberish,
    maxMintAtOnce_: BigNumberish,
    maxMintWhitelist_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      baseTokenURI_,
      maxSupply_,
      maxMintAtOnce_,
      maxMintWhitelist_,
      overrides || {}
    );
  }
  attach(address: string): RoyalKingdom {
    return super.attach(address) as RoyalKingdom;
  }
  connect(signer: Signer): RoyalKingdom__factory {
    return super.connect(signer) as RoyalKingdom__factory;
  }
  static readonly contractName: "RoyalKingdom";
  public readonly contractName: "RoyalKingdom";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyalKingdomInterface {
    return new utils.Interface(_abi) as RoyalKingdomInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyalKingdom {
    return new Contract(address, _abi, signerOrProvider) as RoyalKingdom;
  }
}
