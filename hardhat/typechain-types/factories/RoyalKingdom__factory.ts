/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RoyalKingdom, RoyalKingdomInterface } from "../RoyalKingdom";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseTokenURI_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "maxSupply_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxMintAtOnce_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxMintWhitelist_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerIndexOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenIndexOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintAtOnce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintWhitelist",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "mintPresale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presalePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "reserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setWhitelistMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "togglePresale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenStats",
    outputs: [
      {
        internalType: "uint64",
        name: "attack",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "defense",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "speed",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "level",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "hp",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405266b1a2bc2ec50000600a55666a94d74f430000600b556000600e553480156200002c57600080fd5b506040516200263b3803806200263b8339810160408190526200004f9162000290565b855186908690620000689060019060208501906200011d565b5080516200007e9060029060208401906200011d565b5050506200009b62000095620000c760201b60201c565b620000cb565b8351620000b090600d9060208701906200011d565b50608092909252600855600955506200037a915050565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200012b906200033d565b90600052602060002090601f0160209004810192826200014f57600085556200019a565b82601f106200016a57805160ff19168380011785556200019a565b828001600101855582156200019a579182015b828111156200019a5782518255916020019190600101906200017d565b50620001a8929150620001ac565b5090565b5b80821115620001a85760008155600101620001ad565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001eb57600080fd5b81516001600160401b0380821115620002085762000208620001c3565b604051601f8301601f19908116603f01168101908282118183101715620002335762000233620001c3565b816040528381526020925086838588010111156200025057600080fd5b600091505b8382101562000274578582018301518183018401529082019062000255565b83821115620002865760008385830101525b9695505050505050565b60008060008060008060c08789031215620002aa57600080fd5b86516001600160401b0380821115620002c257600080fd5b620002d08a838b01620001d9565b97506020890151915080821115620002e757600080fd5b620002f58a838b01620001d9565b965060408901519150808211156200030c57600080fd5b506200031b89828a01620001d9565b945050606087015192506080870151915060a087015190509295509295509295565b600181811c908216806200035257607f821691505b602082108114156200037457634e487b7160e01b600052602260045260246000fd5b50919050565b608051612297620003a4600039600081816105ef01528181610e5c0152610f3a01526122976000f3fe6080604052600436106102195760003560e01c80637d8966e411610123578063b88d4fde116100ab578063d5abeb011161006f578063d5abeb01146105dd578063e926ca9514610611578063e985e9c5146106ab578063f2fde38b146106f4578063fd6552851461071457600080fd5b8063b88d4fde1461053b578063bd32fb661461055b578063c87b56dd1461057b578063c884ef831461059b578063d547cfb7146105c857600080fd5b8063a035b1fe116100f2578063a035b1fe146104c6578063a0712d68146104dc578063a22cb465146104ef578063a759a7c81461050f578063aa98e0c61461052557600080fd5b80637d8966e41461045e578063819b25ba146104735780638da5cb5b1461049357806395d89b41146104b157600080fd5b806334393743116101a657806355f804b31161017557806355f804b3146103ca5780636352211e146103ea57806368428a1b1461040a57806370a0823114610429578063715018a61461044957600080fd5b8063343937431461035b57806342842e0e146103705780634f6ccce71461039057806353135ca0146103b057600080fd5b8063095ea7b3116101ed578063095ea7b3146102d15780630c0a6b5e146102f357806318160ddd1461030657806323b872dd1461031b5780632f745c591461033b57600080fd5b80620e7fa81461021e57806301ffc9a71461024757806306fdde0314610277578063081812fc14610299575b600080fd5b34801561022a57600080fd5b50610234600b5481565b6040519081526020015b60405180910390f35b34801561025357600080fd5b50610267610262366004611d08565b61072a565b604051901515815260200161023e565b34801561028357600080fd5b5061028c610797565b60405161023e9190611d7d565b3480156102a557600080fd5b506102b96102b4366004611d90565b610829565b6040516001600160a01b03909116815260200161023e565b3480156102dd57600080fd5b506102f16102ec366004611dc5565b61086d565b005b6102f1610301366004611def565b6108fb565b34801561031257600080fd5b50610234610af4565b34801561032757600080fd5b506102f1610336366004611e6d565b610b13565b34801561034757600080fd5b50610234610356366004611dc5565b610b1e565b34801561036757600080fd5b506102f1610c1a565b34801561037c57600080fd5b506102f161038b366004611e6d565b610c58565b34801561039c57600080fd5b506102346103ab366004611d90565b610c73565b3480156103bc57600080fd5b50600c546102679060ff1681565b3480156103d657600080fd5b506102f16103e5366004611ea9565b610d1d565b3480156103f657600080fd5b506102b9610405366004611d90565b610d53565b34801561041657600080fd5b50600c5461026790610100900460ff1681565b34801561043557600080fd5b50610234610444366004611f1a565b610d65565b34801561045557600080fd5b506102f1610db3565b34801561046a57600080fd5b506102f1610de9565b34801561047f57600080fd5b506102f161048e366004611d90565b610e30565b34801561049f57600080fd5b506007546001600160a01b03166102b9565b3480156104bd57600080fd5b5061028c610ee2565b3480156104d257600080fd5b50610234600a5481565b6102f16104ea366004611d90565b610ef1565b3480156104fb57600080fd5b506102f161050a366004611f35565b611155565b34801561051b57600080fd5b5061023460095481565b34801561053157600080fd5b50610234600e5481565b34801561054757600080fd5b506102f1610556366004611f87565b6111eb565b34801561056757600080fd5b506102f1610576366004611d90565b61121f565b34801561058757600080fd5b5061028c610596366004611d90565b61124e565b3480156105a757600080fd5b506102346105b6366004611f1a565b600f6020526000908152604090205481565b3480156105d457600080fd5b5061028c6112d3565b3480156105e957600080fd5b506102347f000000000000000000000000000000000000000000000000000000000000000081565b34801561061d57600080fd5b5061067161062c366004611d90565b601060205260009081526040902080546001909101546001600160401b0380831692600160401b8104821692600160801b8204831692600160c01b9092048216911685565b604080516001600160401b03968716815294861660208601529285169284019290925283166060830152909116608082015260a00161023e565b3480156106b757600080fd5b506102676106c6366004612062565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b34801561070057600080fd5b506102f161070f366004611f1a565b611361565b34801561072057600080fd5b5061023460085481565b60006001600160e01b031982166380ac58cd60e01b148061075b57506001600160e01b03198216635b5e139f60e01b145b8061077657506001600160e01b0319821663780e9d6360e01b145b8061079157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546107a690612095565b80601f01602080910402602001604051908101604052809291908181526020018280546107d290612095565b801561081f5780601f106107f45761010080835404028352916020019161081f565b820191906000526020600020905b81548152906001019060200180831161080257829003601f168201915b5050505050905090565b6000610834826113f9565b610851576040516333d1c03960e21b815260040160405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061087882610d53565b9050806001600160a01b0316836001600160a01b031614156108ad5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216148015906108cd57506108cb81336106c6565b155b156108eb576040516367d9dca160e11b815260040160405180910390fd5b6108f683838361142d565b505050565b600c5460ff166109455760405162461bcd60e51b815260206004820152601060248201526f50726573616c6520696e61637469766560801b60448201526064015b60405180910390fd5b6040516bffffffffffffffffffffffff193360601b1660208201526000906034016040516020818303038152906040528051906020012090506109bf83838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600e549150849050611489565b6109fd5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081dda1a5d195b1a5cdd1959608a1b604482015260640161093c565b600954336000908152600f6020526040902054610a1b9086906120e6565b1115610a695760405162461bcd60e51b815260206004820152601760248201527f57686974656c697374206d696e74206578636565646564000000000000000000604482015260640161093c565b3484600b54610a7891906120fe565b14610abf5760405162461bcd60e51b815260206004820152601760248201527615985b1d59481cd95b9d081a5cc81a5b98dbdc9c9958dd604a1b604482015260640161093c565b336000908152600f602052604081208054869290610ade9084906120e6565b90915550610aee9050338561149f565b50505050565b6000546001600160801b03600160801b82048116918116919091031690565b6108f68383836114bd565b6000610b2983610d65565b8210610b48576040516306ed618760e11b815260040160405180910390fd5b600080546001600160801b03169080805b83811015610c1457600081815260036020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161580159282019290925290610bc05750610c0c565b80516001600160a01b031615610bd557805192505b876001600160a01b0316836001600160a01b03161415610c0a5786841415610c035750935061079192505050565b6001909301925b505b600101610b59565b50600080fd5b6007546001600160a01b03163314610c445760405162461bcd60e51b815260040161093c9061211d565b600c805460ff19811660ff90911615179055565b6108f6838383604051806020016040528060008152506111eb565b600080546001600160801b031681805b82811015610d0357600081815260036020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905290610cfa5785831415610cf35750949350505050565b6001909201915b50600101610c83565b506040516329c8c00760e21b815260040160405180910390fd5b6007546001600160a01b03163314610d475760405162461bcd60e51b815260040161093c9061211d565b6108f6600d8383611c59565b6000610d5e826116da565b5192915050565b60006001600160a01b038216610d8e576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600460205260409020546001600160401b031690565b6007546001600160a01b03163314610ddd5760405162461bcd60e51b815260040161093c9061211d565b610de760006117fc565b565b6007546001600160a01b03163314610e135760405162461bcd60e51b815260040161093c9061211d565b600c805461ff001981166101009182900460ff1615909102179055565b6007546001600160a01b03163314610e5a5760405162461bcd60e51b815260040161093c9061211d565b7f000000000000000000000000000000000000000000000000000000000000000081610e84610af4565b610e8e91906120e6565b1115610ed55760405162461bcd60e51b81526020600482015260166024820152754d696e7420657863656564206d617820737570706c7960501b604482015260640161093c565b610edf338261149f565b50565b6060600280546107a690612095565b600c54610100900460ff16610f385760405162461bcd60e51b815260206004820152600d60248201526c53616c6520696e61637469766560981b604482015260640161093c565b7f000000000000000000000000000000000000000000000000000000000000000081610f62610af4565b610f6c91906120e6565b1115610fb35760405162461bcd60e51b81526020600482015260166024820152754d696e7420657863656564206d617820737570706c7960501b604482015260640161093c565b600854811115610ff95760405162461bcd60e51b815260206004820152601160248201527013585e081b5a5b9d08195e18d959591959607a1b604482015260640161093c565b3481600a5461100891906120fe565b1461104f5760405162461bcd60e51b815260206004820152601760248201527615985b1d59481cd95b9d081a5cc81a5b98dbdc9c9958dd604a1b604482015260640161093c565b611059338261149f565b506040805160a081018252600781526003602080830191825260049383019384526005606084019081526006608085019081526001600052601090925292517f8c6065603763fec3f5742441d3833f3f43b982453612d76adb39a885e3006b5f80549351955194516001600160401b03908116600160c01b026001600160c01b03968216600160801b02969096166001600160801b03978216600160401b026001600160801b03199096169382169390931794909417959095161792909217909255517f8c6065603763fec3f5742441d3833f3f43b982453612d76adb39a885e3006b6080549190921667ffffffffffffffff19909116179055565b6001600160a01b03821633141561117f5760405163b06307db60e01b815260040160405180910390fd5b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6111f68484846114bd565b6112028484848461184e565b610aee576040516368d2bf6b60e11b815260040160405180910390fd5b6007546001600160a01b031633146112495760405162461bcd60e51b815260040161093c9061211d565b600e55565b6060611259826113f9565b61127657604051630a14c4b560e41b815260040160405180910390fd5b600061128061194e565b90508051600014156112a157604051806020016040528060008152506112cc565b806112ab8461195d565b6040516020016112bc929190612152565b6040516020818303038152906040525b9392505050565b600d80546112e090612095565b80601f016020809104026020016040519081016040528092919081815260200182805461130c90612095565b80156113595780601f1061132e57610100808354040283529160200191611359565b820191906000526020600020905b81548152906001019060200180831161133c57829003601f168201915b505050505081565b6007546001600160a01b0316331461138b5760405162461bcd60e51b815260040161093c9061211d565b6001600160a01b0381166113f05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161093c565b610edf816117fc565b600080546001600160801b031682108015610791575050600090815260036020526040902054600160e01b900460ff161590565b60008281526005602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000826114968584611a5a565b14949350505050565b6114b9828260405180602001604052806000815250611ace565b5050565b60006114c8826116da565b80519091506000906001600160a01b0316336001600160a01b031614806114f6575081516114f690336106c6565b8061151157503361150684610829565b6001600160a01b0316145b90508061153157604051632ce44b5f60e11b815260040160405180910390fd5b846001600160a01b031682600001516001600160a01b0316146115665760405162a1148160e81b815260040160405180910390fd5b6001600160a01b03841661158d57604051633a954ecd60e21b815260040160405180910390fd5b61159d600084846000015161142d565b6001600160a01b038581166000908152600460209081526040808320805467ffffffffffffffff198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600390945282852080546001600160e01b031916909417600160a01b429092169190910217909255908601808352912054909116611690576000546001600160801b031681101561169057825160008281526003602090815260409091208054918601516001600160401b0316600160a01b026001600160e01b03199092166001600160a01b03909316929092171790555b5082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b60408051606081018252600080825260208201819052918101829052905482906001600160801b03168110156117e357600081815260036020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906117e15780516001600160a01b031615611778579392505050565b5060001901600081815260036020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff16151592810192909252156117dc579392505050565b611778565b505b604051636f96cda160e11b815260040160405180910390fd5b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006001600160a01b0384163b1561194257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611892903390899088908890600401612181565b6020604051808303816000875af19250505080156118cd575060408051601f3d908101601f191682019092526118ca918101906121be565b60015b611928573d8080156118fb576040519150601f19603f3d011682016040523d82523d6000602084013e611900565b606091505b508051611920576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611946565b5060015b949350505050565b6060600d80546107a690612095565b6060816119815750506040805180820190915260018152600360fc1b602082015290565b8160005b81156119ab5780611995816121db565b91506119a49050600a8361220c565b9150611985565b6000816001600160401b038111156119c5576119c5611f71565b6040519080825280601f01601f1916602001820160405280156119ef576020820181803683370190505b5090505b841561194657611a04600183612220565b9150611a11600a86612237565b611a1c9060306120e6565b60f81b818381518110611a3157611a3161224b565b60200101906001600160f81b031916908160001a905350611a53600a8661220c565b94506119f3565b600081815b8451811015611ac6576000858281518110611a7c57611a7c61224b565b60200260200101519050808311611aa25760008381526020829052604090209250611ab3565b600081815260208490526040902092505b5080611abe816121db565b915050611a5f565b509392505050565b6108f683838360016000546001600160801b03166001600160a01b038516611b0857604051622e076360e81b815260040160405180910390fd5b83611b265760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038516600081815260046020908152604080832080546001600160801b031981166001600160401b038083168c018116918217600160401b67ffffffffffffffff1990941690921783900481168c018116909202179091558584526003909252822080546001600160e01b031916909317600160a01b42909216919091021790915581905b85811015611c335760405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4838015611c095750611c07600088848861184e565b155b15611c27576040516368d2bf6b60e11b815260040160405180910390fd5b60019182019101611bb2565b50600080546001600160801b0319166001600160801b03929092169190911790556116d3565b828054611c6590612095565b90600052602060002090601f016020900481019282611c875760008555611ccd565b82601f10611ca05782800160ff19823516178555611ccd565b82800160010185558215611ccd579182015b82811115611ccd578235825591602001919060010190611cb2565b50611cd9929150611cdd565b5090565b5b80821115611cd95760008155600101611cde565b6001600160e01b031981168114610edf57600080fd5b600060208284031215611d1a57600080fd5b81356112cc81611cf2565b60005b83811015611d40578181015183820152602001611d28565b83811115610aee5750506000910152565b60008151808452611d69816020860160208601611d25565b601f01601f19169290920160200192915050565b6020815260006112cc6020830184611d51565b600060208284031215611da257600080fd5b5035919050565b80356001600160a01b0381168114611dc057600080fd5b919050565b60008060408385031215611dd857600080fd5b611de183611da9565b946020939093013593505050565b600080600060408486031215611e0457600080fd5b8335925060208401356001600160401b0380821115611e2257600080fd5b818601915086601f830112611e3657600080fd5b813581811115611e4557600080fd5b8760208260051b8501011115611e5a57600080fd5b6020830194508093505050509250925092565b600080600060608486031215611e8257600080fd5b611e8b84611da9565b9250611e9960208501611da9565b9150604084013590509250925092565b60008060208385031215611ebc57600080fd5b82356001600160401b0380821115611ed357600080fd5b818501915085601f830112611ee757600080fd5b813581811115611ef657600080fd5b866020828501011115611f0857600080fd5b60209290920196919550909350505050565b600060208284031215611f2c57600080fd5b6112cc82611da9565b60008060408385031215611f4857600080fd5b611f5183611da9565b915060208301358015158114611f6657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611f9d57600080fd5b611fa685611da9565b9350611fb460208601611da9565b92506040850135915060608501356001600160401b0380821115611fd757600080fd5b818701915087601f830112611feb57600080fd5b813581811115611ffd57611ffd611f71565b604051601f8201601f19908116603f0116810190838211818310171561202557612025611f71565b816040528281528a602084870101111561203e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561207557600080fd5b61207e83611da9565b915061208c60208401611da9565b90509250929050565b600181811c908216806120a957607f821691505b602082108114156120ca57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156120f9576120f96120d0565b500190565b6000816000190483118215151615612118576121186120d0565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008351612164818460208801611d25565b835190830190612178818360208801611d25565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906121b490830184611d51565b9695505050505050565b6000602082840312156121d057600080fd5b81516112cc81611cf2565b60006000198214156121ef576121ef6120d0565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261221b5761221b6121f6565b500490565b600082821015612232576122326120d0565b500390565b600082612246576122466121f6565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220c372f34b4af8c818bf82bb8fbe28c35ab12b73f7485c8d39dc4cfb6eb4c734b464736f6c634300080c0033";

type RoyalKingdomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyalKingdomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyalKingdom__factory extends ContractFactory {
  constructor(...args: RoyalKingdomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RoyalKingdom";
  }

  deploy(
    name_: string,
    symbol_: string,
    baseTokenURI_: string,
    maxSupply_: BigNumberish,
    maxMintAtOnce_: BigNumberish,
    maxMintWhitelist_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RoyalKingdom> {
    return super.deploy(
      name_,
      symbol_,
      baseTokenURI_,
      maxSupply_,
      maxMintAtOnce_,
      maxMintWhitelist_,
      overrides || {}
    ) as Promise<RoyalKingdom>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    baseTokenURI_: string,
    maxSupply_: BigNumberish,
    maxMintAtOnce_: BigNumberish,
    maxMintWhitelist_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      baseTokenURI_,
      maxSupply_,
      maxMintAtOnce_,
      maxMintWhitelist_,
      overrides || {}
    );
  }
  attach(address: string): RoyalKingdom {
    return super.attach(address) as RoyalKingdom;
  }
  connect(signer: Signer): RoyalKingdom__factory {
    return super.connect(signer) as RoyalKingdom__factory;
  }
  static readonly contractName: "RoyalKingdom";
  public readonly contractName: "RoyalKingdom";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyalKingdomInterface {
    return new utils.Interface(_abi) as RoyalKingdomInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyalKingdom {
    return new Contract(address, _abi, signerOrProvider) as RoyalKingdom;
  }
}
