/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RoyalKingdom, RoyalKingdomInterface } from "../RoyalKingdom";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseTokenURI_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "maxSupply_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxMintAtOnce_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxMintWhitelist_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerIndexOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenIndexOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintAtOnce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintWhitelist",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "mintPresale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presalePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "reserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setWhitelistMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "togglePresale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405266b1a2bc2ec50000600a55666a94d74f430000600b556000600e553480156200002c57600080fd5b50604051620024a1380380620024a18339810160408190526200004f9162000290565b855186908690620000689060019060208501906200011d565b5080516200007e9060029060208401906200011d565b5050506200009b62000095620000c760201b60201c565b620000cb565b8351620000b090600d9060208701906200011d565b50608092909252600855600955506200037a915050565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200012b906200033d565b90600052602060002090601f0160209004810192826200014f57600085556200019a565b82601f106200016a57805160ff19168380011785556200019a565b828001600101855582156200019a579182015b828111156200019a5782518255916020019190600101906200017d565b50620001a8929150620001ac565b5090565b5b80821115620001a85760008155600101620001ad565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001eb57600080fd5b81516001600160401b0380821115620002085762000208620001c3565b604051601f8301601f19908116603f01168101908282118183101715620002335762000233620001c3565b816040528381526020925086838588010111156200025057600080fd5b600091505b8382101562000274578582018301518183018401529082019062000255565b83821115620002865760008385830101525b9695505050505050565b60008060008060008060c08789031215620002aa57600080fd5b86516001600160401b0380821115620002c257600080fd5b620002d08a838b01620001d9565b97506020890151915080821115620002e757600080fd5b620002f58a838b01620001d9565b965060408901519150808211156200030c57600080fd5b506200031b89828a01620001d9565b945050606087015192506080870151915060a087015190509295509295509295565b600181811c908216806200035257607f821691505b602082108114156200037457634e487b7160e01b600052602260045260246000fd5b50919050565b6080516120fd620003a4600039600081816105e401528181610dba0152610e9801526120fd6000f3fe60806040526004361061020e5760003560e01c80637d8966e411610118578063b88d4fde116100a0578063d547cfb71161006f578063d547cfb7146105bd578063d5abeb01146105d2578063e985e9c514610606578063f2fde38b1461064f578063fd6552851461066f57600080fd5b8063b88d4fde14610530578063bd32fb6614610550578063c87b56dd14610570578063c884ef831461059057600080fd5b8063a035b1fe116100e7578063a035b1fe146104bb578063a0712d68146104d1578063a22cb465146104e4578063a759a7c814610504578063aa98e0c61461051a57600080fd5b80637d8966e414610453578063819b25ba146104685780638da5cb5b1461048857806395d89b41146104a657600080fd5b8063343937431161019b57806355f804b31161016a57806355f804b3146103bf5780636352211e146103df57806368428a1b146103ff57806370a082311461041e578063715018a61461043e57600080fd5b8063343937431461035057806342842e0e146103655780634f6ccce71461038557806353135ca0146103a557600080fd5b8063095ea7b3116101e2578063095ea7b3146102c65780630c0a6b5e146102e857806318160ddd146102fb57806323b872dd146103105780632f745c591461033057600080fd5b80620e7fa81461021357806301ffc9a71461023c57806306fdde031461026c578063081812fc1461028e575b600080fd5b34801561021f57600080fd5b50610229600b5481565b6040519081526020015b60405180910390f35b34801561024857600080fd5b5061025c610257366004611b6b565b610685565b6040519015158152602001610233565b34801561027857600080fd5b506102816106f2565b6040516102339190611be0565b34801561029a57600080fd5b506102ae6102a9366004611bf3565b610784565b6040516001600160a01b039091168152602001610233565b3480156102d257600080fd5b506102e66102e1366004611c28565b6107c8565b005b6102e66102f6366004611c52565b610856565b34801561030757600080fd5b50610229610a4f565b34801561031c57600080fd5b506102e661032b366004611cd1565b610a6e565b34801561033c57600080fd5b5061022961034b366004611c28565b610a79565b34801561035c57600080fd5b506102e6610b76565b34801561037157600080fd5b506102e6610380366004611cd1565b610bb4565b34801561039157600080fd5b506102296103a0366004611bf3565b610bcf565b3480156103b157600080fd5b50600c5461025c9060ff1681565b3480156103cb57600080fd5b506102e66103da366004611d0d565b610c7a565b3480156103eb57600080fd5b506102ae6103fa366004611bf3565b610cb0565b34801561040b57600080fd5b50600c5461025c90610100900460ff1681565b34801561042a57600080fd5b50610229610439366004611d7f565b610cc2565b34801561044a57600080fd5b506102e6610d11565b34801561045f57600080fd5b506102e6610d47565b34801561047457600080fd5b506102e6610483366004611bf3565b610d8e565b34801561049457600080fd5b506007546001600160a01b03166102ae565b3480156104b257600080fd5b50610281610e40565b3480156104c757600080fd5b50610229600a5481565b6102e66104df366004611bf3565b610e4f565b3480156104f057600080fd5b506102e66104ff366004611d9a565b610fad565b34801561051057600080fd5b5061022960095481565b34801561052657600080fd5b50610229600e5481565b34801561053c57600080fd5b506102e661054b366004611dec565b611043565b34801561055c57600080fd5b506102e661056b366004611bf3565b611077565b34801561057c57600080fd5b5061028161058b366004611bf3565b6110a6565b34801561059c57600080fd5b506102296105ab366004611d7f565b600f6020526000908152604090205481565b3480156105c957600080fd5b5061028161112b565b3480156105de57600080fd5b506102297f000000000000000000000000000000000000000000000000000000000000000081565b34801561061257600080fd5b5061025c610621366004611ec8565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b34801561065b57600080fd5b506102e661066a366004611d7f565b6111b9565b34801561067b57600080fd5b5061022960085481565b60006001600160e01b031982166380ac58cd60e01b14806106b657506001600160e01b03198216635b5e139f60e01b145b806106d157506001600160e01b0319821663780e9d6360e01b145b806106ec57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606001805461070190611efb565b80601f016020809104026020016040519081016040528092919081815260200182805461072d90611efb565b801561077a5780601f1061074f5761010080835404028352916020019161077a565b820191906000526020600020905b81548152906001019060200180831161075d57829003601f168201915b5050505050905090565b600061078f82611251565b6107ac576040516333d1c03960e21b815260040160405180910390fd5b506000908152600560205260409020546001600160a01b031690565b60006107d382610cb0565b9050806001600160a01b0316836001600160a01b031614156108085760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b0382161480159061082857506108268133610621565b155b15610846576040516367d9dca160e11b815260040160405180910390fd5b610851838383611285565b505050565b600c5460ff166108a05760405162461bcd60e51b815260206004820152601060248201526f50726573616c6520696e61637469766560801b60448201526064015b60405180910390fd5b6040516bffffffffffffffffffffffff193360601b16602082015260009060340160405160208183030381529060405280519060200120905061091a83838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600e5491508490506112e1565b6109585760405162461bcd60e51b815260206004820152600f60248201526e139bdd081dda1a5d195b1a5cdd1959608a1b6044820152606401610897565b600954336000908152600f6020526040902054610976908690611f4c565b11156109c45760405162461bcd60e51b815260206004820152601760248201527f57686974656c697374206d696e742065786365656465640000000000000000006044820152606401610897565b3484600b546109d39190611f64565b14610a1a5760405162461bcd60e51b815260206004820152601760248201527615985b1d59481cd95b9d081a5cc81a5b98dbdc9c9958dd604a1b6044820152606401610897565b336000908152600f602052604081208054869290610a39908490611f4c565b90915550610a49905033856112f7565b50505050565b6000546001600160801b03600160801b82048116918116919091031690565b610851838383611315565b6000610a8483610cc2565b8210610aa3576040516306ed618760e11b815260040160405180910390fd5b600080546001600160801b03169080805b83811015610b7057600081815260036020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff161580159282019290925290610b1c5750610b68565b80516001600160a01b031615610b3157805192505b876001600160a01b0316836001600160a01b03161415610b665786841415610b5f575093506106ec92505050565b6001909301925b505b600101610ab4565b50600080fd5b6007546001600160a01b03163314610ba05760405162461bcd60e51b815260040161089790611f83565b600c805460ff19811660ff90911615179055565b61085183838360405180602001604052806000815250611043565b600080546001600160801b031681805b82811015610c6057600081815260036020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff16151591810182905290610c575785831415610c505750949350505050565b6001909201915b50600101610bdf565b506040516329c8c00760e21b815260040160405180910390fd5b6007546001600160a01b03163314610ca45760405162461bcd60e51b815260040161089790611f83565b610851600d8383611abc565b6000610cbb82611534565b5192915050565b60006001600160a01b038216610ceb576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526004602052604090205467ffffffffffffffff1690565b6007546001600160a01b03163314610d3b5760405162461bcd60e51b815260040161089790611f83565b610d456000611658565b565b6007546001600160a01b03163314610d715760405162461bcd60e51b815260040161089790611f83565b600c805461ff001981166101009182900460ff1615909102179055565b6007546001600160a01b03163314610db85760405162461bcd60e51b815260040161089790611f83565b7f000000000000000000000000000000000000000000000000000000000000000081610de2610a4f565b610dec9190611f4c565b1115610e335760405162461bcd60e51b81526020600482015260166024820152754d696e7420657863656564206d617820737570706c7960501b6044820152606401610897565b610e3d33826112f7565b50565b60606002805461070190611efb565b600c54610100900460ff16610e965760405162461bcd60e51b815260206004820152600d60248201526c53616c6520696e61637469766560981b6044820152606401610897565b7f000000000000000000000000000000000000000000000000000000000000000081610ec0610a4f565b610eca9190611f4c565b1115610f115760405162461bcd60e51b81526020600482015260166024820152754d696e7420657863656564206d617820737570706c7960501b6044820152606401610897565b600854811115610f575760405162461bcd60e51b815260206004820152601160248201527013585e081b5a5b9d08195e18d959591959607a1b6044820152606401610897565b3481600a54610f669190611f64565b14610e335760405162461bcd60e51b815260206004820152601760248201527615985b1d59481cd95b9d081a5cc81a5b98dbdc9c9958dd604a1b6044820152606401610897565b6001600160a01b038216331415610fd75760405163b06307db60e01b815260040160405180910390fd5b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61104e848484611315565b61105a848484846116aa565b610a49576040516368d2bf6b60e11b815260040160405180910390fd5b6007546001600160a01b031633146110a15760405162461bcd60e51b815260040161089790611f83565b600e55565b60606110b182611251565b6110ce57604051630a14c4b560e41b815260040160405180910390fd5b60006110d86117aa565b90508051600014156110f95760405180602001604052806000815250611124565b80611103846117b9565b604051602001611114929190611fb8565b6040516020818303038152906040525b9392505050565b600d805461113890611efb565b80601f016020809104026020016040519081016040528092919081815260200182805461116490611efb565b80156111b15780601f10611186576101008083540402835291602001916111b1565b820191906000526020600020905b81548152906001019060200180831161119457829003601f168201915b505050505081565b6007546001600160a01b031633146111e35760405162461bcd60e51b815260040161089790611f83565b6001600160a01b0381166112485760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610897565b610e3d81611658565b600080546001600160801b0316821080156106ec575050600090815260036020526040902054600160e01b900460ff161590565b60008281526005602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000826112ee85846118b7565b14949350505050565b61131182826040518060200160405280600081525061192b565b5050565b600061132082611534565b80519091506000906001600160a01b0316336001600160a01b0316148061134e5750815161134e9033610621565b8061136957503361135e84610784565b6001600160a01b0316145b90508061138957604051632ce44b5f60e11b815260040160405180910390fd5b846001600160a01b031682600001516001600160a01b0316146113be5760405162a1148160e81b815260040160405180910390fd5b6001600160a01b0384166113e557604051633a954ecd60e21b815260040160405180910390fd5b6113f56000848460000151611285565b6001600160a01b038581166000908152600460209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600390945282852080546001600160e01b031916909417600160a01b4290921691909102179092559086018083529120549091166114ea576000546001600160801b03168110156114ea578251600082815260036020908152604090912080549186015167ffffffffffffffff16600160a01b026001600160e01b03199092166001600160a01b03909316929092171790555b5082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b60408051606081018252600080825260208201819052918101829052905482906001600160801b031681101561163f57600081815260036020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff1615159181018290529061163d5780516001600160a01b0316156115d3579392505050565b5060001901600081815260036020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff1615159281019290925215611638579392505050565b6115d3565b505b604051636f96cda160e11b815260040160405180910390fd5b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006001600160a01b0384163b1561179e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906116ee903390899088908890600401611fe7565b6020604051808303816000875af1925050508015611729575060408051601f3d908101601f1916820190925261172691810190612024565b60015b611784573d808015611757576040519150601f19603f3d011682016040523d82523d6000602084013e61175c565b606091505b50805161177c576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506117a2565b5060015b949350505050565b6060600d805461070190611efb565b6060816117dd5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561180757806117f181612041565b91506118009050600a83612072565b91506117e1565b60008167ffffffffffffffff81111561182257611822611dd6565b6040519080825280601f01601f19166020018201604052801561184c576020820181803683370190505b5090505b84156117a257611861600183612086565b915061186e600a8661209d565b611879906030611f4c565b60f81b81838151811061188e5761188e6120b1565b60200101906001600160f81b031916908160001a9053506118b0600a86612072565b9450611850565b600081815b84518110156119235760008582815181106118d9576118d96120b1565b602002602001015190508083116118ff5760008381526020829052604090209250611910565b600081815260208490526040902092505b508061191b81612041565b9150506118bc565b509392505050565b61085183838360016000546001600160801b03166001600160a01b03851661196557604051622e076360e81b815260040160405180910390fd5b836119835760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038516600081815260046020908152604080832080546001600160801b0319811667ffffffffffffffff8083168c0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168c018116909202179091558584526003909252822080546001600160e01b031916909317600160a01b42909216919091021790915581905b85811015611a965760405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4838015611a6c5750611a6a60008884886116aa565b155b15611a8a576040516368d2bf6b60e11b815260040160405180910390fd5b60019182019101611a15565b50600080546001600160801b0319166001600160801b039290921691909117905561152d565b828054611ac890611efb565b90600052602060002090601f016020900481019282611aea5760008555611b30565b82601f10611b035782800160ff19823516178555611b30565b82800160010185558215611b30579182015b82811115611b30578235825591602001919060010190611b15565b50611b3c929150611b40565b5090565b5b80821115611b3c5760008155600101611b41565b6001600160e01b031981168114610e3d57600080fd5b600060208284031215611b7d57600080fd5b813561112481611b55565b60005b83811015611ba3578181015183820152602001611b8b565b83811115610a495750506000910152565b60008151808452611bcc816020860160208601611b88565b601f01601f19169290920160200192915050565b6020815260006111246020830184611bb4565b600060208284031215611c0557600080fd5b5035919050565b80356001600160a01b0381168114611c2357600080fd5b919050565b60008060408385031215611c3b57600080fd5b611c4483611c0c565b946020939093013593505050565b600080600060408486031215611c6757600080fd5b83359250602084013567ffffffffffffffff80821115611c8657600080fd5b818601915086601f830112611c9a57600080fd5b813581811115611ca957600080fd5b8760208260051b8501011115611cbe57600080fd5b6020830194508093505050509250925092565b600080600060608486031215611ce657600080fd5b611cef84611c0c565b9250611cfd60208501611c0c565b9150604084013590509250925092565b60008060208385031215611d2057600080fd5b823567ffffffffffffffff80821115611d3857600080fd5b818501915085601f830112611d4c57600080fd5b813581811115611d5b57600080fd5b866020828501011115611d6d57600080fd5b60209290920196919550909350505050565b600060208284031215611d9157600080fd5b61112482611c0c565b60008060408385031215611dad57600080fd5b611db683611c0c565b915060208301358015158114611dcb57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611e0257600080fd5b611e0b85611c0c565b9350611e1960208601611c0c565b925060408501359150606085013567ffffffffffffffff80821115611e3d57600080fd5b818701915087601f830112611e5157600080fd5b813581811115611e6357611e63611dd6565b604051601f8201601f19908116603f01168101908382118183101715611e8b57611e8b611dd6565b816040528281528a6020848701011115611ea457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611edb57600080fd5b611ee483611c0c565b9150611ef260208401611c0c565b90509250929050565b600181811c90821680611f0f57607f821691505b60208210811415611f3057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611f5f57611f5f611f36565b500190565b6000816000190483118215151615611f7e57611f7e611f36565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008351611fca818460208801611b88565b835190830190611fde818360208801611b88565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061201a90830184611bb4565b9695505050505050565b60006020828403121561203657600080fd5b815161112481611b55565b600060001982141561205557612055611f36565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826120815761208161205c565b500490565b60008282101561209857612098611f36565b500390565b6000826120ac576120ac61205c565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220c47945a72a1d488ac5d332846acf5e467b57e5d862a66a5c7dda4f717cc3fe6264736f6c634300080c0033";

type RoyalKingdomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyalKingdomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyalKingdom__factory extends ContractFactory {
  constructor(...args: RoyalKingdomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RoyalKingdom";
  }

  deploy(
    name_: string,
    symbol_: string,
    baseTokenURI_: string,
    maxSupply_: BigNumberish,
    maxMintAtOnce_: BigNumberish,
    maxMintWhitelist_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RoyalKingdom> {
    return super.deploy(
      name_,
      symbol_,
      baseTokenURI_,
      maxSupply_,
      maxMintAtOnce_,
      maxMintWhitelist_,
      overrides || {}
    ) as Promise<RoyalKingdom>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    baseTokenURI_: string,
    maxSupply_: BigNumberish,
    maxMintAtOnce_: BigNumberish,
    maxMintWhitelist_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      baseTokenURI_,
      maxSupply_,
      maxMintAtOnce_,
      maxMintWhitelist_,
      overrides || {}
    );
  }
  attach(address: string): RoyalKingdom {
    return super.attach(address) as RoyalKingdom;
  }
  connect(signer: Signer): RoyalKingdom__factory {
    return super.connect(signer) as RoyalKingdom__factory;
  }
  static readonly contractName: "RoyalKingdom";
  public readonly contractName: "RoyalKingdom";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyalKingdomInterface {
    return new utils.Interface(_abi) as RoyalKingdomInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyalKingdom {
    return new Contract(address, _abi, signerOrProvider) as RoyalKingdom;
  }
}
