/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RoyalKingdom, RoyalKingdomInterface } from "../RoyalKingdom";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseTokenURI_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "maxSupply_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxMintAtOnce_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxMintWhitelist_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintAtOnce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintWhitelist",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "mintPresale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presalePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "reserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setWhitelistMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "togglePresale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405266b1a2bc2ec50000600a55666a94d74f430000600b556000600e553480156200002c57600080fd5b50604051620026f0380380620026f08339810160408190526200004f9162000276565b855186908690620000689060019060208501906200011d565b5080516200007e9060029060208401906200011d565b5050506200009b62000095620000c760201b60201c565b620000cb565b8351620000b090600d9060208701906200011d565b506080929092526008556009555062000372915050565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200012b906200031f565b90600052602060002090601f0160209004810192826200014f57600085556200019a565b82601f106200016a57805160ff19168380011785556200019a565b828001600101855582156200019a579182015b828111156200019a5782518255916020019190600101906200017d565b50620001a8929150620001ac565b5090565b5b80821115620001a85760008155600101620001ad565b600082601f830112620001d4578081fd5b81516001600160401b0380821115620001f157620001f16200035c565b604051601f8301601f19908116603f011681019082821181831017156200021c576200021c6200035c565b8160405283815260209250868385880101111562000238578485fd5b8491505b838210156200025b57858201830151818301840152908201906200023c565b838211156200026c57848385830101525b9695505050505050565b60008060008060008060c087890312156200028f578182fd5b86516001600160401b0380821115620002a6578384fd5b620002b48a838b01620001c3565b97506020890151915080821115620002ca578384fd5b620002d88a838b01620001c3565b96506040890151915080821115620002ee578384fd5b50620002fd89828a01620001c3565b945050606087015192506080870151915060a087015190509295509295509295565b600181811c908216806200033457607f821691505b602082108114156200035657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6080516123546200039c600039600081816105e401528181610ec60152610fa501526123546000f3fe60806040526004361061020e5760003560e01c80637d8966e411610118578063b88d4fde116100a0578063d547cfb71161006f578063d547cfb7146105bd578063d5abeb01146105d2578063e985e9c514610606578063f2fde38b1461064f578063fd6552851461066f57600080fd5b8063b88d4fde14610530578063bd32fb6614610550578063c87b56dd14610570578063c884ef831461059057600080fd5b8063a035b1fe116100e7578063a035b1fe146104bb578063a0712d68146104d1578063a22cb465146104e4578063a759a7c814610504578063aa98e0c61461051a57600080fd5b80637d8966e414610453578063819b25ba146104685780638da5cb5b1461048857806395d89b41146104a657600080fd5b8063343937431161019b57806355f804b31161016a57806355f804b3146103bf5780636352211e146103df57806368428a1b146103ff57806370a082311461041e578063715018a61461043e57600080fd5b8063343937431461035057806342842e0e146103655780634f6ccce71461038557806353135ca0146103a557600080fd5b8063095ea7b3116101e2578063095ea7b3146102c65780630c0a6b5e146102e857806318160ddd146102fb57806323b872dd146103105780632f745c591461033057600080fd5b80620e7fa81461021357806301ffc9a71461023c57806306fdde031461026c578063081812fc1461028e575b600080fd5b34801561021f57600080fd5b50610229600b5481565b6040519081526020015b60405180910390f35b34801561024857600080fd5b5061025c610257366004611f7c565b610685565b6040519015158152602001610233565b34801561027857600080fd5b506102816106f2565b6040516102339190612133565b34801561029a57600080fd5b506102ae6102a9366004611f64565b610784565b6040516001600160a01b039091168152602001610233565b3480156102d257600080fd5b506102e66102e1366004611f3b565b610814565b005b6102e66102f6366004612021565b61092c565b34801561030757600080fd5b50600054610229565b34801561031c57600080fd5b506102e661032b366004611df1565b610b21565b34801561033c57600080fd5b5061022961034b366004611f3b565b610b2c565b34801561035c57600080fd5b506102e6610c89565b34801561037157600080fd5b506102e6610380366004611df1565b610cc7565b34801561039157600080fd5b506102296103a0366004611f64565b610ce2565b3480156103b157600080fd5b50600c5461025c9060ff1681565b3480156103cb57600080fd5b506102e66103da366004611fb4565b610d44565b3480156103eb57600080fd5b506102ae6103fa366004611f64565b610d7a565b34801561040b57600080fd5b50600c5461025c90610100900460ff1681565b34801561042a57600080fd5b50610229610439366004611da5565b610d8c565b34801561044a57600080fd5b506102e6610e1d565b34801561045f57600080fd5b506102e6610e53565b34801561047457600080fd5b506102e6610483366004611f64565b610e9a565b34801561049457600080fd5b506007546001600160a01b03166102ae565b3480156104b257600080fd5b50610281610f4d565b3480156104c757600080fd5b50610229600a5481565b6102e66104df366004611f64565b610f5c565b3480156104f057600080fd5b506102e66104ff366004611f01565b6110bc565b34801561051057600080fd5b5061022960095481565b34801561052657600080fd5b50610229600e5481565b34801561053c57600080fd5b506102e661054b366004611e2c565b611181565b34801561055c57600080fd5b506102e661056b366004611f64565b6111b4565b34801561057c57600080fd5b5061028161058b366004611f64565b6111e3565b34801561059c57600080fd5b506102296105ab366004611da5565b600f6020526000908152604090205481565b3480156105c957600080fd5b506102816112b1565b3480156105de57600080fd5b506102297f000000000000000000000000000000000000000000000000000000000000000081565b34801561061257600080fd5b5061025c610621366004611dbf565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b34801561065b57600080fd5b506102e661066a366004611da5565b61133f565b34801561067b57600080fd5b5061022960085481565b60006001600160e01b031982166380ac58cd60e01b14806106b657506001600160e01b03198216635b5e139f60e01b145b806106d157506001600160e01b0319821663780e9d6360e01b145b806106ec57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546107019061225c565b80601f016020809104026020016040519081016040528092919081815260200182805461072d9061225c565b801561077a5780601f1061074f5761010080835404028352916020019161077a565b820191906000526020600020905b81548152906001019060200180831161075d57829003601f168201915b5050505050905090565b6000610791826000541190565b6107f85760405162461bcd60e51b815260206004820152602d60248201527f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560448201526c3c34b9ba32b73a103a37b5b2b760991b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061081f82610d7a565b9050806001600160a01b0316836001600160a01b0316141561088e5760405162461bcd60e51b815260206004820152602260248201527f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60448201526132b960f11b60648201526084016107ef565b336001600160a01b03821614806108aa57506108aa8133610621565b61091c5760405162461bcd60e51b815260206004820152603960248201527f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656420666f7220616c6c0000000000000060648201526084016107ef565b6109278383836113d7565b505050565b600c5460ff166109715760405162461bcd60e51b815260206004820152601060248201526f50726573616c6520696e61637469766560801b60448201526064016107ef565b6040516bffffffffffffffffffffffff193360601b1660208201526000906034016040516020818303038152906040528051906020012090506109eb83838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600e549150849050611433565b610a295760405162461bcd60e51b815260206004820152600f60248201526e139bdd081dda1a5d195b1a5cdd1959608a1b60448201526064016107ef565b600954336000908152600f6020526040902054610a479086906121ce565b1115610a955760405162461bcd60e51b815260206004820152601760248201527f57686974656c697374206d696e7420657863656564656400000000000000000060448201526064016107ef565b3484600b54610aa491906121fa565b1115610aec5760405162461bcd60e51b815260206004820152601760248201527615985b1d59481cd95b9d081a5cc81a5b98dbdc9c9958dd604a1b60448201526064016107ef565b336000908152600f602052604081208054869290610b0b9084906121ce565b90915550610b1b90503385611449565b50505050565b610927838383611467565b6000610b3783610d8c565b8210610b905760405162461bcd60e51b815260206004820152602260248201527f455243373231413a206f776e657220696e646578206f7574206f6620626f756e604482015261647360f01b60648201526084016107ef565b600080549080805b83811015610c29576000818152600360209081526040918290208251808401909352546001600160a01b038116808452600160a01b90910467ffffffffffffffff169183019190915215610beb57805192505b876001600160a01b0316836001600160a01b03161415610c205786841415610c19575093506106ec92505050565b6001909301925b50600101610b98565b5060405162461bcd60e51b815260206004820152602e60248201527f455243373231413a20756e61626c6520746f2067657420746f6b656e206f662060448201526d0deeedccae440c4f240d2dcc8caf60931b60648201526084016107ef565b6007546001600160a01b03163314610cb35760405162461bcd60e51b81526004016107ef90612146565b600c805460ff19811660ff90911615179055565b61092783838360405180602001604052806000815250611181565b600080548210610d405760405162461bcd60e51b815260206004820152602360248201527f455243373231413a20676c6f62616c20696e646578206f7574206f6620626f756044820152626e647360e81b60648201526084016107ef565b5090565b6007546001600160a01b03163314610d6e5760405162461bcd60e51b81526004016107ef90612146565b610927600d8383611cf9565b6000610d858261174c565b5192915050565b60006001600160a01b038216610df85760405162461bcd60e51b815260206004820152602b60248201527f455243373231413a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084016107ef565b506001600160a01b03166000908152600460205260409020546001600160801b031690565b6007546001600160a01b03163314610e475760405162461bcd60e51b81526004016107ef90612146565b610e516000611823565b565b6007546001600160a01b03163314610e7d5760405162461bcd60e51b81526004016107ef90612146565b600c805461ff001981166101009182900460ff1615909102179055565b6007546001600160a01b03163314610ec45760405162461bcd60e51b81526004016107ef90612146565b7f000000000000000000000000000000000000000000000000000000000000000081610eef60005490565b610ef991906121ce565b1115610f405760405162461bcd60e51b81526020600482015260166024820152754d696e7420657863656564206d617820737570706c7960501b60448201526064016107ef565b610f4a3382611449565b50565b6060600280546107019061225c565b600c54610100900460ff16610fa35760405162461bcd60e51b815260206004820152600d60248201526c53616c6520696e61637469766560981b60448201526064016107ef565b7f000000000000000000000000000000000000000000000000000000000000000081610fce60005490565b610fd891906121ce565b111561101f5760405162461bcd60e51b81526020600482015260166024820152754d696e7420657863656564206d617820737570706c7960501b60448201526064016107ef565b6008548111156110655760405162461bcd60e51b815260206004820152601160248201527013585e081b5a5b9d08195e18d959591959607a1b60448201526064016107ef565b3481600a5461107491906121fa565b1115610f405760405162461bcd60e51b815260206004820152601760248201527615985b1d59481cd95b9d081a5cc81a5b98dbdc9c9958dd604a1b60448201526064016107ef565b6001600160a01b0382163314156111155760405162461bcd60e51b815260206004820152601a60248201527f455243373231413a20617070726f766520746f2063616c6c657200000000000060448201526064016107ef565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61118c848484611467565b61119884848484611875565b610b1b5760405162461bcd60e51b81526004016107ef9061217b565b6007546001600160a01b031633146111de5760405162461bcd60e51b81526004016107ef90612146565b600e55565b60606111f0826000541190565b6112545760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016107ef565b600061125e611983565b905080516000141561127f57604051806020016040528060008152506112aa565b8061128984611992565b60405160200161129a9291906120c7565b6040516020818303038152906040525b9392505050565b600d80546112be9061225c565b80601f01602080910402602001604051908101604052809291908181526020018280546112ea9061225c565b80156113375780601f1061130c57610100808354040283529160200191611337565b820191906000526020600020905b81548152906001019060200180831161131a57829003601f168201915b505050505081565b6007546001600160a01b031633146113695760405162461bcd60e51b81526004016107ef90612146565b6001600160a01b0381166113ce5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107ef565b610f4a81611823565b60008281526005602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000826114408584611aac565b14949350505050565b611463828260405180602001604052806000815250611b2e565b5050565b60006114728261174c565b80519091506000906001600160a01b0316336001600160a01b031614806114a957503361149e84610784565b6001600160a01b0316145b806114bb575081516114bb9033610621565b9050806115255760405162461bcd60e51b815260206004820152603260248201527f455243373231413a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016107ef565b846001600160a01b031682600001516001600160a01b0316146115995760405162461bcd60e51b815260206004820152602660248201527f455243373231413a207472616e736665722066726f6d20696e636f72726563746044820152651037bbb732b960d11b60648201526084016107ef565b6001600160a01b0384166115fd5760405162461bcd60e51b815260206004820152602560248201527f455243373231413a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016107ef565b61160d60008484600001516113d7565b6001600160a01b03858116600090815260046020908152604080832080546001600160801b03198082166001600160801b03928316600019018316179092558986168086528386208054938416938316600190810190931693909317909255888552600390935281842080546001600160e01b031916909117600160a01b4267ffffffffffffffff1602179055908601808352912054909116611702576116b5816000541190565b15611702578251600082815260036020908152604090912080549186015167ffffffffffffffff16600160a01b026001600160e01b03199092166001600160a01b03909316929092171790555b5082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b604080518082019091526000808252602082015261176b826000541190565b6117ca5760405162461bcd60e51b815260206004820152602a60248201527f455243373231413a206f776e657220717565727920666f72206e6f6e657869736044820152693a32b73a103a37b5b2b760b11b60648201526084016107ef565b815b6000818152600360209081526040918290208251808401909352546001600160a01b038116808452600160a01b90910467ffffffffffffffff169183019190915215611819579392505050565b50600019016117cc565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006001600160a01b0384163b1561197757604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906118b99033908990889088906004016120f6565b602060405180830381600087803b1580156118d357600080fd5b505af1925050508015611903575060408051601f3d908101601f1916820190925261190091810190611f98565b60015b61195d573d808015611931576040519150601f19603f3d011682016040523d82523d6000602084013e611936565b606091505b5080516119555760405162461bcd60e51b81526004016107ef9061217b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061197b565b5060015b949350505050565b6060600d80546107019061225c565b6060816119b65750506040805180820190915260018152600360fc1b602082015290565b8160005b81156119e057806119ca81612297565b91506119d99050600a836121e6565b91506119ba565b60008167ffffffffffffffff811115611a0957634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611a33576020820181803683370190505b5090505b841561197b57611a48600183612219565b9150611a55600a866122b2565b611a609060306121ce565b60f81b818381518110611a8357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611aa5600a866121e6565b9450611a37565b600081815b8451811015611b26576000858281518110611adc57634e487b7160e01b600052603260045260246000fd5b60200260200101519050808311611b025760008381526020829052604090209250611b13565b600081815260208490526040902092505b5080611b1e81612297565b915050611ab1565b509392505050565b61092783838360016000546001600160a01b038516611b995760405162461bcd60e51b815260206004820152602160248201527f455243373231413a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016107ef565b83611bf75760405162461bcd60e51b815260206004820152602860248201527f455243373231413a207175616e74697479206d75737420626520677265617465604482015267072207468616e20360c41b60648201526084016107ef565b6001600160a01b03851660008181526004602090815260408083208054600160801b6001600160801b031982166001600160801b039283168c01831690811782900483168c01909216021790558483526003909152812080546001600160e01b031916909217600160a01b4267ffffffffffffffff16021790915581905b85811015611cf05760405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a48315611ce457611cc86000888488611875565b611ce45760405162461bcd60e51b81526004016107ef9061217b565b60019182019101611c75565b50600055611745565b828054611d059061225c565b90600052602060002090601f016020900481019282611d275760008555611d6d565b82601f10611d405782800160ff19823516178555611d6d565b82800160010185558215611d6d579182015b82811115611d6d578235825591602001919060010190611d52565b50610d409291505b80821115610d405760008155600101611d75565b80356001600160a01b0381168114611da057600080fd5b919050565b600060208284031215611db6578081fd5b6112aa82611d89565b60008060408385031215611dd1578081fd5b611dda83611d89565b9150611de860208401611d89565b90509250929050565b600080600060608486031215611e05578081fd5b611e0e84611d89565b9250611e1c60208501611d89565b9150604084013590509250925092565b60008060008060808587031215611e41578081fd5b611e4a85611d89565b9350611e5860208601611d89565b925060408501359150606085013567ffffffffffffffff80821115611e7b578283fd5b818701915087601f830112611e8e578283fd5b813581811115611ea057611ea06122f2565b604051601f8201601f19908116603f01168101908382118183101715611ec857611ec86122f2565b816040528281528a6020848701011115611ee0578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215611f13578182fd5b611f1c83611d89565b915060208301358015158114611f30578182fd5b809150509250929050565b60008060408385031215611f4d578182fd5b611f5683611d89565b946020939093013593505050565b600060208284031215611f75578081fd5b5035919050565b600060208284031215611f8d578081fd5b81356112aa81612308565b600060208284031215611fa9578081fd5b81516112aa81612308565b60008060208385031215611fc6578182fd5b823567ffffffffffffffff80821115611fdd578384fd5b818501915085601f830112611ff0578384fd5b813581811115611ffe578485fd5b86602082850101111561200f578485fd5b60209290920196919550909350505050565b600080600060408486031215612035578283fd5b83359250602084013567ffffffffffffffff80821115612053578384fd5b818601915086601f830112612066578384fd5b813581811115612074578485fd5b8760208260051b8501011115612088578485fd5b6020830194508093505050509250925092565b600081518084526120b3816020860160208601612230565b601f01601f19169290920160200192915050565b600083516120d9818460208801612230565b8351908301906120ed818360208801612230565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906121299083018461209b565b9695505050505050565b6020815260006112aa602083018461209b565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526033908201527f455243373231413a207472616e7366657220746f206e6f6e204552433732315260408201527232b1b2b4bb32b91034b6b83632b6b2b73a32b960691b606082015260800190565b600082198211156121e1576121e16122c6565b500190565b6000826121f5576121f56122dc565b500490565b6000816000190483118215151615612214576122146122c6565b500290565b60008282101561222b5761222b6122c6565b500390565b60005b8381101561224b578181015183820152602001612233565b83811115610b1b5750506000910152565b600181811c9082168061227057607f821691505b6020821081141561229157634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156122ab576122ab6122c6565b5060010190565b6000826122c1576122c16122dc565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610f4a57600080fdfea264697066735822122060981187db6858cb1a825003b421c6e06b3571539d0cfdec154fb999915099e564736f6c63430008040033";

type RoyalKingdomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyalKingdomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyalKingdom__factory extends ContractFactory {
  constructor(...args: RoyalKingdomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RoyalKingdom";
  }

  deploy(
    name_: string,
    symbol_: string,
    baseTokenURI_: string,
    maxSupply_: BigNumberish,
    maxMintAtOnce_: BigNumberish,
    maxMintWhitelist_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RoyalKingdom> {
    return super.deploy(
      name_,
      symbol_,
      baseTokenURI_,
      maxSupply_,
      maxMintAtOnce_,
      maxMintWhitelist_,
      overrides || {}
    ) as Promise<RoyalKingdom>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    baseTokenURI_: string,
    maxSupply_: BigNumberish,
    maxMintAtOnce_: BigNumberish,
    maxMintWhitelist_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      baseTokenURI_,
      maxSupply_,
      maxMintAtOnce_,
      maxMintWhitelist_,
      overrides || {}
    );
  }
  attach(address: string): RoyalKingdom {
    return super.attach(address) as RoyalKingdom;
  }
  connect(signer: Signer): RoyalKingdom__factory {
    return super.connect(signer) as RoyalKingdom__factory;
  }
  static readonly contractName: "RoyalKingdom";
  public readonly contractName: "RoyalKingdom";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyalKingdomInterface {
    return new utils.Interface(_abi) as RoyalKingdomInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyalKingdom {
    return new Contract(address, _abi, signerOrProvider) as RoyalKingdom;
  }
}
